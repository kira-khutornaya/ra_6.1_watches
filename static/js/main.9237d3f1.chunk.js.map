{"version":3,"sources":["ClockManager.constants.js","components/Form.js","components/Clock.js","components/ClockContainer.js","components/ClockManager.js","App.js","reportWebVitals.js","index.js"],"names":["INITIAL_FORM_STATE","name","timezone","Form","props","state","onChange","bind","onSubmit","e","target","value","this","setState","preventDefault","addClock","className","htmlFor","id","type","Component","Clock","clock","moment","utcOffset","interval","setInterval","clearInterval","time","secondRatio","second","minuteRatio","minute","hourRatio","hour","onDelete","calcRatio","onClick","style","transform","ClockContainer","clocks","map","Number","PureComponent","ClockManager","deleteClock","prev","nanoid","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9237d3f1.chunk.js","sourcesContent":["const INITIAL_FORM_STATE = {\n  name: '',\n  timezone: '',\n};\n\nexport default INITIAL_FORM_STATE;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport INITIAL_FORM_STATE from '../ClockManager.constants';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = INITIAL_FORM_STATE;\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const { addClock } = this.props;\n\n    addClock(this.state);\n    this.setState(INITIAL_FORM_STATE);\n  }\n\n  render() {\n    const { name, timezone } = this.state;\n\n    return (\n      <div className=\"Form__control\">\n        <form\n          className=\"Form\"\n          onSubmit={this.onSubmit}\n        >\n          <div className=\"Form__group\">\n            <label htmlFor=\"name\">Название</label>\n            <input\n              className=\"Form__field\"\n              id=\"name\"\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.onChange}\n            />\n          </div>\n          <div className=\"Form__group\">\n            <label htmlFor=\"timezone\">Временная зона</label>\n            <input\n              className=\"Form__field\"\n              id=\"timezone\"\n              type=\"text\"\n              name=\"timezone\"\n              value={timezone}\n              onChange={this.onChange}\n            />\n          </div>\n\n          <button\n            className=\"Form__button button\"\n            type=\"submit\"\n          >\n            Добавить\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nForm.propTypes = {\n  addClock: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","/* eslint class-methods-use-this: [\"error\", { \"exceptMethods\": [\"calcRatio\"] }] */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nclass Clock extends Component {\n  constructor(props) {\n    super(props);\n\n    const { timezone } = this.props;\n    this.state = {\n      clock: moment().utcOffset(timezone),\n    };\n  }\n\n  componentDidMount() {\n    const { timezone } = this.props;\n\n    this.interval = setInterval(() => {\n      this.setState({\n        clock: moment().utcOffset(timezone),\n      });\n    }, 300);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  calcRatio(time) {\n    const secondRatio = time.second() / 60;\n    const minuteRatio = (secondRatio + time.minute()) / 60;\n    const hourRatio = (minuteRatio + time.hour()) / 12;\n\n    return { hourRatio, minuteRatio, secondRatio };\n  }\n\n  render() {\n    const { clock } = this.state;\n    const { name, onDelete } = this.props;\n    const { hourRatio, minuteRatio, secondRatio } = this.calcRatio(clock);\n\n    return (\n      <div className=\"Clock\">\n        <div className=\"Clock__control\">\n          <div className=\"Clock__name\">{name}</div>\n          <button\n            className=\"Clock__btn_remove\"\n            type=\"button\"\n            onClick={onDelete}\n          >\n            ✘\n          </button>\n        </div>\n        <div className=\"Clock__face\">\n          <div\n            className=\"Clock-face__hour\"\n            style={{ transform: `rotate(${hourRatio * 360}deg)` }}\n          >\n            <div className=\"hr\" />\n          </div>\n          <div className=\"Clock-face__minute\" style={{ transform: `rotate(${minuteRatio * 360}deg)` }}>\n            <div className=\"mn\" />\n          </div>\n          <div className=\"Clock-face__second\" style={{ transform: `rotate(${secondRatio * 360}deg)` }}>\n            <div className=\"sc\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.string.isRequired,\n  timezone: PropTypes.number.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default Clock;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Clock from './Clock';\n\nclass ClockContainer extends PureComponent {\n  render() {\n    const { clocks, onDelete } = this.props;\n\n    return (\n      <div className=\"ClockContainer\">\n        {\n          clocks.map((clock) => (\n            <Clock\n              name={clock.name}\n              timezone={Number(clock.timezone)}\n              onDelete={() => onDelete(clock.id)}\n              key={clock.id}\n            />\n          ))\n        }\n      </div>\n    );\n  }\n}\n\nClockContainer.propTypes = {\n  clocks: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ClockContainer;\n","import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport Form from './Form';\nimport ClockContainer from './ClockContainer';\n\nexport default class ClockManager extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clocks: [],\n    };\n\n    this.addClock = this.addClock.bind(this);\n    this.deleteClock = this.deleteClock.bind(this);\n  }\n\n  addClock({ name, timezone }) {\n    this.setState((prev) => ({\n      clocks: [...prev.clocks,\n        {\n          id: nanoid(),\n          name,\n          timezone,\n        },\n      ],\n    }));\n  }\n\n  deleteClock(id) {\n    this.setState((prev) => ({\n      clocks: prev.clocks.filter((clock) => clock.id !== id),\n    }));\n  }\n\n  render() {\n    const { clocks } = this.state;\n\n    return (\n      <div className=\"Clocks\">\n        <Form addClock={this.addClock} />\n        <ClockContainer\n          clocks={clocks}\n          onDelete={this.deleteClock}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport ClockManager from './components/ClockManager';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ClockManager />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}